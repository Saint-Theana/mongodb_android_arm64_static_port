# Copyright (C) 2020-present MongoDB, Inc.
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the Server Side Public License, version 1,
# as published by MongoDB, Inc.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# Server Side Public License for more details.
#
# You should have received a copy of the Server Side Public License
# along with this program. If not, see
# <http://www.mongodb.com/licensing/server-side-public-license>.
#
# As a special exception, the copyright holders give permission to link the
# code of portions of this program with the OpenSSL library under certain
# conditions as described in each individual source file and distribute
# linked combinations including the program with the OpenSSL library. You
# must comply with the Server Side Public License in all respects for
# all of the code used other than as permitted herein. If you modify file(s)
# with this exception, you may extend this exception to your version of the
# file(s), but you are not obligated to do so. If you do not wish to do so,
# delete this exception statement from your version. If you delete this
# exception statement from all source files in the program, then also delete
# it in the license file.
#

global:
    cpp_namespace: "mongo"
    cpp_includes:
        - "mongo/s/catalog/type_collection.h"

imports:
    - "mongo/db/commands/rename_collection.idl"
    - "mongo/db/drop_database.idl"
    - "mongo/db/keypattern.idl"
    - "mongo/idl/basic_types.idl"
    - "mongo/s/chunk_version.idl"
    - "mongo/s/database_version.idl"
    - "mongo/s/resharding/common_types.idl"

types:
    CollectionType:
        description: "Information of a sharded collection."
        bson_serialization_type: object
        cpp_type: CollectionType
        serializer: "mongo::CollectionType::toBSON"
        deserializer: "mongo::CollectionType"

structs:

    ConfigsvrCreateDatabaseResponse:
        description: "Response for the create database command"
        strict: false
        fields:
            databaseVersion:
                type: DatabaseVersionBase
                description: "The version of the newly-created or already existing database"
                optional: false

    RenameCollectionRequest:
        description: "Request for the rename collection command"
        strict: false
        fields:
            to:
                type: namespacestring
                description: "The new namespace for the collection being renamed."
            dropTarget:
                type: bool
                description: "If true, mongod will drop the target of renameCollection prior to
                renaming the collection."
                default: false
            stayTemp:
                type: bool
                description: "If true, the original collection will remain temp if it was temp
                before the rename."
                default: false

    RenameCollectionResponse:
        description: "Response for the rename collection command"
        strict: false
        fields:
            collectionVersion:
                type: ChunkVersion
                description: "Latest version of the collection"
                optional: false

    CreateCollectionRequest:
        description: "All the parameters sent by the router."
        generate_comparison_operators: false
        strict: false
        fields:
            shardKey:
                type: object_owned
                description: "The index specification document to use as the shard key."
                optional: true
            unique:
                type: bool
                description: "Whether the shard key index should enforce a unique constraint."
                optional: true
            numInitialChunks:
                type: safeInt64
                description: >-
                    The number of chunks to create initially when sharding an empty collection with
                    a hashed shard key.
                optional: true
            presplitHashedZones:
                type: bool
                description: >-
                    True if the chunks should be pre-split based on the existing zones when
                    sharding a collection with hashed shard key.
                optional: true
            initialSplitPoints:
                type: array<object_owned>
                description: >-
                    A specific set of points to create initial splits at, currently used only by
                    mapReduce.
                optional: true
            collation:
                type: object_owned
                description: "The collation to use for the shard key index."
                optional: true

    CreateCollectionResponse:
        description: "Response of the create collection command"
        strict: false
        fields:
            collectionUUID:
                type: uuid
                description: "UUID of the created collection"
                optional: true
            collectionVersion:
                type: ChunkVersion
                description: "Latest version of the collection"
                optional: false

commands:

    _shardsvrCreateCollection:
        command_name: _shardsvrCreateCollection
        cpp_name: ShardsvrCreateCollection
        description: "The internal createCollection command for a shard."
        strict: false
        namespace: concatenate_with_db
        api_version: ""
        chained_structs:
            CreateCollectionRequest: CreateCollectionRequest

    _shardsvrCreateCollectionParticipant:
        command_name: _shardsvrCreateCollectionParticipant
        cpp_name: ShardsvrCreateCollectionParticipant
        description: "Command to create a collection on participant shards, when called, assumes the primary shard is under the critical section for that namespace."
        strict: false
        namespace: concatenate_with_db
        api_version: ""
        fields:
            indexes:
                type: array<object>
                description: "Collection indexes."
            options:
                type: object
                description: "Collection options."
            collectionUUID:
                type: uuid
                description: "Collection uuid."
                optional: true
            idIndex:
                type: object
                description: "Id index."

    _shardsvrDropDatabase:
        description: "Internal command sent to the primary shard of a database to drop it."
        command_name: _shardsvrDropDatabase
        namespace: ignored
        api_version: ""
        cpp_name: ShardsvrDropDatabase

    _shardsvrDropDatabaseParticipant:
        description: "Internal command sent to participants shards to drop a database."
        command_name: _shardsvrDropDatabaseParticipant
        namespace: ignored
        api_version: ""
        cpp_name: ShardsvrDropDatabaseParticipant
        strict: false

    _shardsvrDropCollection:
        description: "Parser for the _shardsvrDropCollection command"
        command_name: _shardsvrDropCollection
        namespace: concatenate_with_db
        api_version: ""
        cpp_name: ShardsvrDropCollection
        strict: false

    _shardsvrDropCollectionParticipant:
        description: "Parser for the _shardsvrDropCollectionParticipant command"
        command_name: _shardsvrDropCollectionParticipant
        namespace: concatenate_with_db
        api_version: ""
        cpp_name: ShardsvrDropCollectionParticipant
        strict: false

    _shardsvrRenameCollection:
        command_name: _shardsvrRenameCollection
        cpp_name: ShardsvrRenameCollection
        description: "Internal renameCollection command for a shard."
        strict: false
        namespace: concatenate_with_db
        api_version: ""
        chained_structs:
            RenameCollectionRequest: RenameCollectionRequest

    _configsvrRenameCollectionMetadata:
        command_name: _configsvrRenameCollectionMetadata
        cpp_name: ConfigsvrRenameCollectionMetadata
        description: "Internal command for renaming collection metadata on the CSRS"
        strict: false
        namespace: concatenate_with_db
        api_version: ""
        fields:
            to:
                type: namespacestring
                description: "The new namespace for the collection being renamed."
            optFromCollection:
                description: "Information of the source collection to rename, used only for sharded collection."
                type: CollectionType
                optional: true

    _shardsvrReshardCollection:
        command_name: _shardsvrReshardCollection
        cpp_name: ShardsvrReshardCollection
        description: "The internal reshardCollection command on the shard."
        strict: false
        namespace: type
        api_version: ""
        type: namespacestring
        fields:
            key:
                type: object
                description: "The index specification document to use as the new shard key."
                optional: false
            unique:
                type: bool
                description: "Whether the shard key index should enforce a unique constraint."
                optional: true
            numInitialChunks:
                type: safeInt64
                description: "The number of chunks to create initially."
                optional: true
            collation:
                type: object
                description: "The collation to use for the shard key index."
                optional: true
            zones:
                type: array<ReshardingZoneType>
                description: "The zones associated with the new shard key."
                optional: true
            _presetReshardedChunks:
                type: array<ReshardedChunk>
                description: >-
                    "Mapping of chunk ranges to be used as the initial split output. This is only for 
                    testing purposes."
                optional: true

    _shardsvrRefineCollectionShardKey:
        description: "Parser for the _shardsvrRefineCollectionShardKey command"
        command_name: _shardsvrRefineCollectionShardKey
        cpp_name: ShardsvrRefineCollectionShardKey
        namespace: concatenate_with_db
        api_version: ""
        strict: false
        fields:
            newShardKey:
                type: KeyPattern
                description: "The index specification document to use as the new shard key."
                optional: false

    _configsvrCreateDatabase:
        description: "The internal createDatabase command on the config server"
        api_version: ""
        command_name: _configsvrCreateDatabase
        cpp_name : ConfigsvrCreateDatabase
        namespace: type
        type: string
        reply_type: ConfigsvrCreateDatabaseResponse
        strict: false
        fields:
            primaryShardId:
                type: string
                description: "If set, indicates to the system which shard should be used as the
                              primary for the database (if not already created). Otherwise, the
                              system will use the balancer in order to select a primary."
                optional: true
            enableSharding:
                type: bool
                description: "May only be set to 'true'. If set, indicates to the config server that
                              it must turn on the 'enableSharding' bit for that database."
                optional: true
