# -*- mode: python; -*-
# NOTE: This file is auto-generated by "yaml-cpp_get_sources.sh" - DO NOT EDIT

Import("env")

# Create a new environment since this one doesn't build without errors when using -Wno-virtual-dtor
env = env.Clone()

try:
    env['CXXFLAGS'].remove('-Wnon-virtual-dtor')
    env['CCFLAGS'].remove('-Wall')
except ValueError:
    pass

env.InjectThirdParty('yaml', 'CPPDEFINES')

env.Library(
    target="yaml",
    source=[
        "yaml-cpp/src/binary.cpp",
        "yaml-cpp/src/convert.cpp",
        "yaml-cpp/src/directives.cpp",
        "yaml-cpp/src/emit.cpp",
        "yaml-cpp/src/emitfromevents.cpp",
        "yaml-cpp/src/emitter.cpp",
        "yaml-cpp/src/emitterstate.cpp",
        "yaml-cpp/src/emitterutils.cpp",
        "yaml-cpp/src/exceptions.cpp",
        "yaml-cpp/src/exp.cpp",
        "yaml-cpp/src/memory.cpp",
        "yaml-cpp/src/nodebuilder.cpp",
        "yaml-cpp/src/node.cpp",
        "yaml-cpp/src/node_data.cpp",
        "yaml-cpp/src/nodeevents.cpp",
        "yaml-cpp/src/null.cpp",
        "yaml-cpp/src/ostream_wrapper.cpp",
        "yaml-cpp/src/parse.cpp",
        "yaml-cpp/src/parser.cpp",
        "yaml-cpp/src/regex_yaml.cpp",
        "yaml-cpp/src/scanner.cpp",
        "yaml-cpp/src/scanscalar.cpp",
        "yaml-cpp/src/scantag.cpp",
        "yaml-cpp/src/scantoken.cpp",
        "yaml-cpp/src/simplekey.cpp",
        "yaml-cpp/src/singledocparser.cpp",
        "yaml-cpp/src/stream.cpp",
        "yaml-cpp/src/tag.cpp",
    ])
